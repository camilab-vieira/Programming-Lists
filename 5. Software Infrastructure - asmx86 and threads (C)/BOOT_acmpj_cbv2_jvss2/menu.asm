org 0x7E00
jmp 0x0000:start


;DATA


data:
    title db 'CAMPO MINADO', 0
    Start db 'START', 0
    instructions db 'INSTRUCTIONS', 0
    cred db 'CREDIT', 0
    selectStart db '--> START <--', 0
    selectInstructions db '--> INSTRUCTIONS <--', 0
    selectCred db '--> CREDIT <--', 0
    select db 1
    group1 db 'ANTONIO CARLOS JUNIOR (acmpj)', 0
    group2 db 'CAMILA BARBOSA VIEIRA (cbv2)', 0
    group3 db 'JOSE VINICIUS DE SANTANA SOUZA (jvss2)', 0
    instruction1 db '- Revele todos os blocos sem revelar as minas', 0
    instruction2 db '- Os numeros revelados indicam o numero de minas ao redor', 0
    instruction3 db '- Pressione A, W, D, S para indicar o bloco que sera selecionado', 0
    instruction4 db '- Pressione espaco para abrir um bloco e F para marcar com uma flag', 0
    instruction5 db '- Pressione R para reiniciar o jogo', 0
    instruction6 db '- Pressione ESC para voltar ao menu a qualquer momento', 0


;END DATA



;ADDITIONAL FUNCTIONS


putchar:                   ;Printar caracter      
    push ax                ;Armazenar estado anterior dos registradores
    push bx              
	mov ah, 0x0e           ;Teletype output (printar)
    mov bh, 0              ;Numero da pagina
    mov bl, 0xf            ;Cor (branco)
	int 10h                ;Interrupcao de video
    pop bx                 ;Recuperar estado anterior dos registradores
    pop ax
	ret                    ;Retornar
endl:                      ;Quebra de linha
    push ax                ;Armazenar estado anterior dos registradores
	mov al, 0x0a           ;Chama uma nova linha (contudo o cursor nao vai para o inicio da proxima linha)
	call putchar
	mov al, 0x0d           ;Chama o carriage return (leva o cursor para o inicio da linha)
	call putchar
    pop ax                 ;Recuperar estado anterior dos registradores
	ret                    ;Retornar
getchar:                   ;Ler caracter do teclado
    mov ah, 0x00           ;Chamada para ler tecla pressionada
	int 16h                ;Interrupcao de teclado
    ret                    ;Retornar

printString:               ;Printando uma String 
    push ax                ;Armazenar estado anterior dos registradores
    xor ax, ax             ;Limpando registradores
    .loop:
        lodsb              ;Carrega em AL o conteudo apontado por SI e inc SI
        cmp al, 0          ;Verifica o fim da string
        je .done           ;Se sim, encerra 
        call putchar
        jmp .loop          ;Printa o proximo caracter
    .done:
        call endl
        pop ax             ;Recuperar estado anterior dos registradores
        ret                ;Retornar
            
;================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================
;END ADDITIONAL FUNCTIONS
;================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================


;PRINT NAMES


printTitle:
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 3              ;Define a linha
    mov dl, 14             ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, title          ;Posiciona SI no inicio da str
    call printString
    ret                    ;Retorna
printStart:
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 8              ;Define a linha
    mov dl, 17             ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, Start          ;Posiciona SI no inicio da str
    call printString
    ret                    ;Retorna
printInstructions:
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 11             ;Define a linha
    mov dl, 14             ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, instructions   ;Posiciona SI no inicio da str
    call printString
    ret                    ;Retorna
printCredits:
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 14             ;Define a linha
    mov dl, 17             ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, cred   ;Posiciona SI no inicio da str
    call printString
    ret                    ;Retorna
printSelectStart:
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 8              ;Define a linha
    mov dl, 13             ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, selectStart    ;Posiciona SI no inicio da str
    call printString
    ret                    ;Retorna
printSelectInstructions:
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 11             ;Define a linha
    mov dl, 10             ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, selectInstructions ;Posiciona SI no inicio da str
    call printString
    ret                    ;Retorna
printSelectCredits:
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 14             ;Define a linha
    mov dl, 13             ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, selectCred     ;Posiciona SI no inicio da str
    call printString
    ret                    ;Retorna
           

;END PRINT NAMES



;PROCESS GETCHAR 


processInput:              ;Processar a entrada
    cmp al, 'w'            ;Verifica se foi W (Cima)
    je inputW
    cmp al, 's'            ;Verifica se foi S (Baixo)
    je inputS
    cmp al, 32             ;Verifica se foi espaço (selecionar)
    je inputSpace
    
    .end:
        jmp start          ;Tentar novamente
inputW:                    ;Processar o W
    push ax                ;Armazenar estado anterior dos registradores
    push bx              
    push cx              
    push dx
    xor ax, ax             ;Limpando registradores
    xor cx, cx             
    mov bx, ax
    mov dx, ax
    
    mov si, select         ;SI aponta para str
    lodsb                  ;Carrega em AL o conteudo apontado por SI e inc SI
    dec si                 ;Dec de SI o que foi inc devido ao lodsb
    dec ax                 ;Dec AX para voltar uma opcao
    cmp ax, 0              ;Verifica se esta na opcao 0 (inexistente)
    jne .end
    mov ax, 3              ;Se sim, vai para a ultima opcao
    
    .end:
        mov di, si         ;DI aponta para o mesmo endereco de SI
        stosb              ;O valor de AL é armazenado no endereco apontado por DI e DI é incrementado
        pop dx             ;Recuperar estado anterior dos registradores
        pop cx
        pop bx
        pop ax
        jmp start          ;Retornar
inputS:                    ;Processar o W
    push ax                ;Armazenar estado anterior dos registradores
    push bx              
    push cx              
    push dx
    xor ax, ax             ;Limpando registradores
    xor cx, cx             
    mov bx, ax
    mov dx, ax
    
    mov si, select         ;SI aponta para str
    lodsb                  ;Carrega em AL o conteudo apontado por SI e inc SI
    dec si                 ;Dec de SI o que foi inc devido ao lodsb
    inc ax                 ;Inc AX para avancar uma opcao
    cmp ax, 4              ;Verifica se esta na opcao 4 (inexistente)
    jne .end
    mov ax, 1              ;Se sim, vai para a primeira opcao
    
    .end:
        mov di, si         ;DI aponta para o mesmo endereco de SI
        stosb              ;O valor de AL é armazenado no endereco apontado por DI e DI é incrementado
        pop dx             ;Recuperar estado anterior dos registradores
        pop cx
        pop bx
        pop ax
        jmp start          ;Retornar
inputSpace:                ;Processar espaço
    push ax                ;Armazenar estado anterior dos registradores
    push bx              
    push cx              
    push dx
    xor ax, ax             ;Limpando registradores
    xor cx, cx             
    mov bx, ax
    mov dx, ax
    
    mov si, select         ;SI aponta para str
    lodsb                  ;Carrega em AL o conteudo apontado por SI e inc SI
    dec si                 ;Dec de SI o que foi inc devido ao lodsb
    
    cmp al, 1              ;Verifica qual opcao esta sendo escolhida           
    je game         
    cmp al, 2           
    je instructionsScreen         
    cmp al, 3           
    je creditScreen  

    .end:
        pop dx             ;Recuperar estado anterior dos registradores
        pop cx
        pop bx
        pop ax
        jmp start          ;Retornar


;END PROCESS GETCHAR 



;INSTRUCTIONS SCREEN 


instructionsScreen:
    mov ah, 0              ;Numero de chamada (modo video)
    mov al, 12h            ;Modo de video (modo VGA)
    int 10h                ;Interrupcao de video

    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 2              ;Define a linha
    mov dl, 34             ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, instructions   ;Posiciona SI no inicio da str
    call printString

    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 6              ;Define a linha
    mov dl, 3              ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, instruction1   ;Posiciona SI no inicio da str
    call printString
    
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 9              ;Define a linha
    mov dl, 3              ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, instruction2   ;Posiciona SI no inicio da str
    call printString
    
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 12             ;Define a linha
    mov dl, 3              ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, instruction3   ;Posiciona SI no inicio da str
    call printString
    
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 15             ;Define a linha
    mov dl, 3              ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, instruction4   ;Posiciona SI no inicio da str
    call printString
    
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 18             ;Define a linha
    mov dl, 3              ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, instruction5   ;Posiciona SI no inicio da str
    call printString
    
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 21             ;Define a linha
    mov dl, 3              ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, instruction6   ;Posiciona SI no inicio da str
    call printString
    
    call getchar
    cmp al, 27             ;Verifica se foi ESC (voltar para o menu)
    je .inputESC

    jmp instructionsScreen

    .inputESC:
        jmp start

;================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================
;END INSTRUCTIONS SCREEN 



;CREDIT SCREEN 


creditScreen:
    mov ah, 0              ;Numero de chamada (modo video)
    mov al, 13h            ;Modo de video (modo VGA)
    int 10h                ;Interrupcao de video

    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 3              ;Define a linha
    mov dl, 17             ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, cred           ;Posiciona SI no inicio da str
    call printString
    
    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 8              ;Define a linha
    mov dl, 2              ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, group1         ;Posiciona SI no inicio da str
    call printString

    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 12             ;Define a linha
    mov dl, 2              ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, group2         ;Posiciona SI no inicio da str
    call printString

    mov ah, 02h            ;Chamada para posicionar o cursor
    mov dh, 16             ;Define a linha
    mov dl, 2              ;Define a coluna
    int 10h                ;Interrupcao de video
    mov si, group3         ;Posiciona SI no inicio da str
    call printString

    call getchar
    cmp al, 27             ;Verifica se foi ESC (voltar para o menu)
    je .inputESC

    jmp creditScreen

    .inputESC:
        jmp start


;END CREDIT SCREEN 


start:
    xor ax, ax             ;Limpando registradores
    mov cx, ax
    mov ds, ax
    mov es, ax

    mov ah, 0              ;Numero de chamada (modo video)
    mov al, 13h            ;Modo de video (modo VGA)
    int 10h                ;Interrupcao de video

    call printTitle
    
    mov si, select         ;SI aponta para str
    lodsb                  ;Carrega em AL o conteudo apontado por SI e inc SI

    cmp al, 1              ;Verifica a posicao carregada
    je .select1
    cmp al, 2
    je .select2
    cmp al, 3
    je .select3
    
    .select1:
        call printSelectStart
        call printInstructions
        call printCredits
        jmp .continue
    
    .select2:
        call printStart
        call printSelectInstructions
        call printCredits
        jmp .continue
    
    .select3:
        call printStart
        call printInstructions
        call printSelectCredits
        jmp .continue
    
    .continue:
        call getchar
        jmp processInput

    jmp start


;REDIRECT TO THE GAME 


game: ;Setando a posição do disco onde kernel.asm foi armazenado(ES:BX = [0x860:0x0])
	mov ax,0x860		   ;0x860<<1 + 0 = 0x86
	mov es,ax
	xor bx,bx		       ;Zerando o offset

    ;Setando a posição da Ram onde o jogo será lido
	mov ah, 0x02	       ;comando de ler setor do disco
	mov al,8		       ;Quantidade de blocos ocupados por jogo
	mov dl,0		       ;Drive floppy

    ;Usaremos as seguintes posições na memoria:
	mov ch,0		       ;Trilha 0
	mov cl,7		       ;Setor 2
	mov dh,0		       ;Cabeca 0
	int 13h
	jc game	               ;Tentar novo

break:
	jmp 0x8600 		      ;Pula para a posição carregada

exit:
    jmp $


;END REDIRECT TO THE GAME
